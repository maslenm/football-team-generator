{"version":3,"sources":["components/ResetButton/ResetButton.js","data/actions/state.js","history.js","components/ResetButton/index.js","components/NavBar.js","components/Footer.js","components/Home.js","components/PlayerList/PlayerList.js","components/PlayerList/index.js","components/AddPlayer/AddPlayer.js","components/AddPlayer/index.js","components/Shuffle/Shuffle.js","components/Shuffle/index.js","components/TeamsList/TeamsList.js","components/TeamsList/index.js","components/App.js","reportWebVitals.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["ResetButton","handleReset","name","className","onClick","createTeams","players","type","payload","createHashHistory","connect","dispatch","history","push","NavBar","Footer","Home","to","PlayerList","length","map","player","index","state","AddPlayer","props","playerName","playersAdded","handleChange","bind","addPlayer","handleCreate","e","this","setState","currentTarget","value","preventDefault","onSubmit","data","placeholder","onChange","required","Component","Shuffle","TeamsList","teams","team1","team2","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initial","arrayShuffle","arr","newPos","temp","i","Math","floor","random","midPoint","slice","reducer","action","showCreate","addPlayerReducer","createTeamsReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab59bf2a.chunk.js","sourcesContent":["const ResetButton = ({ handleReset, name }) => (\n\t<>\n\t\t<button className=\"redButton\" onClick={handleReset}>\n\t\t\t{name}\n\t\t</button>\n\t</>\n);\n\nexport default ResetButton;\n","export const addPlayer = (data) => {\n\treturn {\n\t\ttype: \"ADD_PLAYER\",\n\t\tpayload: {\n\t\t\tname: data.playerName,\n\t\t},\n\t};\n};\n\nexport const createTeams = (players) => {\n\treturn {\n\t\ttype: \"CREATE_TEAMS\",\n\t\tpayload: {\n\t\t\tplayers,\n\t\t},\n\t};\n};\n\nexport const reset = () => {\n\treturn {\n\t\ttype: \"RESET\",\n\t};\n};\n","import { createHashHistory } from \"history\";\nexport default createHashHistory();\n","import { connect } from \"react-redux\";\nimport ResetButton from \"./ResetButton\";\nimport { reset } from \"../../data/actions/state\";\nimport history from \"../../history\";\n\nconst mapDispatchToProps = (dispatch) => ({\n\thandleReset: () => {\n\t\tdispatch(reset());\n\t\thistory.push(\"/\");\n\t},\n});\n\nexport default connect(null, mapDispatchToProps)(ResetButton);\n","import ResetButton from \"./ResetButton\";\n\nconst NavBar = ({ name }) => (\n\t<>\n\t\t<header className=\"nav-header\">\n\t\t\t<section className=\"title\">\n\t\t\t\t<h1 className=\"logo\">AutoTeam</h1>\n\t\t\t\t<h2 className=\"logo\">Football Team Picker</h2>\n\t\t\t</section>\n\t\t\t<nav className=\"nav-main\">\n\t\t\t\t<ResetButton name={\"Restart\"} />\n\t\t\t</nav>\n\t\t</header>\n\t</>\n);\n\nexport default NavBar;\n","const Footer = () => (\n\t<>\n\t\t<footer className=\"footer\">\n\t\t\t<p>| AutoTeam v1.0 | Matthew Maslen 2020 |</p>\n\t\t</footer>\n\t</>\n);\n\nexport default Footer;\n","import { Link } from \"react-router-dom\";\nimport Footer from \"./Footer\";\n\nconst Home = () => (\n\t<>\n\t\t<section className=\"welcome\">\n\t\t\t<header className=\"welcome-header\">\n\t\t\t\t<h2>What is Auto Team?</h2>\n\t\t\t</header>\n\t\t\t<article className=\"welcome-content\">\n\t\t\t\t<p>\n\t\t\t\t\tThis site allows you to enter the names of 10 people and it will\n\t\t\t\t\trandomly divide them into 2 teams of equal size.\n\t\t\t\t</p>\n\t\t\t</article>\n\t\t</section>\n\t\t<section className=\"instruction\">\n\t\t\t<header className=\"instruction-header\">\n\t\t\t\t<h2>Instructions :</h2>\n\t\t\t</header>\n\t\t\t<ul className=\"instruction-list\">\n\t\t\t\t<li>Enter 10 player names</li>\n\t\t\t\t<li>Submit your entries</li>\n\t\t\t\t<li>View Randomly generated teams</li>\n\t\t\t\t<li>Hit Restart to wipe your players and start again</li>\n\t\t\t</ul>\n\t\t</section>\n\t\t<section className=\"start\">\n\t\t\t<Link to=\"/addplayer\" className=\"greenButton\">\n\t\t\t\tStart\n\t\t\t</Link>\n\t\t</section>\n\t\t<Footer />\n\t</>\n);\n\nexport default Home;\n","const PlayerList = ({ players }) => {\n\treturn (\n\t\t<>\n\t\t\t<section className=\"players\">\n\t\t\t\t<header className=\"players-header\">\n\t\t\t\t\t<h2>Current Players :</h2>\n\t\t\t\t</header>\n\t\t\t\t{/* if no players added display message, else display current list, maps over state.players */}\n\t\t\t\t{players.length === 0 ? (\n\t\t\t\t\t<p className=\"players-list-none\">No players have been added.</p>\n\t\t\t\t) : (\n\t\t\t\t\t<ul className=\"players-list\">\n\t\t\t\t\t\t{players.map((player, index) => {\n\t\t\t\t\t\t\treturn <li key={index}> {player.name}</li>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t</>\n\t);\n};\n\nexport default PlayerList;\n","import PlayerList from \"./PlayerList\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tplayers: state.players,\n\t};\n};\n\nexport default connect(mapStateToProps)(PlayerList);\n","import { Component } from \"react\";\nimport PlayerList from \"../PlayerList\";\n\nclass AddPlayer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tplayerName: \"\",\n\t\t\tplayersAdded: this.props.playersAdded,\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.addPlayer = this.addPlayer.bind(this);\n\t\tthis.handleCreate = this.handleCreate.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ playerName: e.currentTarget.value });\n\t}\n\n\taddPlayer(e) {\n\t\te.preventDefault();\n\n\t\tconst { onSubmit } = this.props;\n\t\tonSubmit({ ...this.state });\n\t\tthis.setState({ playerName: \"\" });\n\t}\n\n\thandleCreate() {\n\t\tthis.props.handleCreate(this.props.data);\n\t}\n\n\trender() {\n\t\tconst { playerName } = this.state;\n\t\tconst { playersAdded } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{!playersAdded ? (\n\t\t\t\t\t<section className=\"addPlayer\">\n\t\t\t\t\t\t<header className=\"addPlayer-header\">\n\t\t\t\t\t\t\t<h2>Enter Your Players :</h2>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<form className=\"addPlayer-content\" onSubmit={this.addPlayer}>\n\t\t\t\t\t\t\t<label className=\"addPlayerInput\">Name:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"addPlayerInput\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"playerName\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter name\"\n\t\t\t\t\t\t\t\tvalue={playerName}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<button className=\"greenButton add\">Add</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</section>\n\t\t\t\t) : (\n\t\t\t\t\t<button className=\"greenButton create\" onClick={this.handleCreate}>\n\t\t\t\t\t\tCreate Teams\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t<PlayerList />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default AddPlayer;\n","import AddPlayer from \"./AddPlayer\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nimport { addPlayer, createTeams } from \"../../data/actions/state\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tplayersAdded: state.playersAdded,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSubmit: (data) => dispatch(addPlayer(data)),\n\t\thandleCreate: (data) => {\n\t\t\tdispatch(createTeams(data));\n\t\t\thistory.push(\"/teamslist\");\n\t\t},\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlayer);\n","const Shuffle = ({ handleCreate }) => (\n\t<button className=\"greenButton create\" onClick={handleCreate}>\n\t\tShuffle Again!\n\t</button>\n);\n\nexport default Shuffle;\n","import Shuffle from \"./Shuffle\";\nimport { connect } from \"react-redux\";\nimport { createTeams } from \"../../data/actions/state\";\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleCreate: (data) => {\n\t\t\tdispatch(createTeams(data));\n\t\t},\n\t};\n};\n\nexport default connect(null, mapDispatchToProps)(Shuffle);\n","import Shuffle from \"../Shuffle\";\n\nconst TeamsList = ({ teams }) => (\n\t<>\n\t\t<section className=\"teams-page\">\n\t\t\t<header className=\"teams-page-header\">\n\t\t\t\t<h3>Teams :</h3>\n\t\t\t</header>\n\t\t</section>\n\t\t<section className=\"teams\">\n\t\t\t<header className=\"teams-header\">\n\t\t\t\t<h3>Team 1 :</h3>\n\t\t\t</header>\n\t\t\t<ul className=\"teams-list-1\">\n\t\t\t\t{/* maps over the team property of teams state */}\n\t\t\t\t{teams.team1.map((player, index) => {\n\t\t\t\t\treturn <li key={index}> {player.name}</li>;\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</section>\n\t\t<section className=\"teams\">\n\t\t\t<header className=\"teams-header\">\n\t\t\t\t<h3>Team 2 :</h3>\n\t\t\t</header>\n\t\t\t<ul className=\"teams-list-2\">\n\t\t\t\t{teams.team2.map((player, index) => {\n\t\t\t\t\treturn <li key={index}> {player.name}</li>;\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</section>\n\n\t\t<section className=\"reShuffle\">\n\t\t\t<p>Not Happy with the team selection? </p>\n\t\t\t<Shuffle />\n\t\t</section>\n\t</>\n);\n\nexport default TeamsList;\n","import TeamsList from \"./TeamsList\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tteams: state.teams,\n\t};\n};\n\nexport default connect(mapStateToProps)(TeamsList);\n","import { HashRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Home from \"./Home\";\nimport AddPlayer from \"./AddPlayer\";\nimport TeamsList from \"./TeamsList\";\nimport history from \"../history\";\n\nconst App = () => (\n\t<Router history={history}>\n\t\t<>\n\t\t\t<main className=\"container\">\n\t\t\t\t<NavBar />\n\t\t\t\t<section className=\"card\">\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/addplayer\">\n\t\t\t\t\t\t<AddPlayer />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/teamslist\">\n\t\t\t\t\t\t<TeamsList />\n\t\t\t\t\t</Route>\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t</>\n\t</Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initial = {\n\tplayers: [],\n\tteams: { team1: [], team2: [] },\n\tplayersAdded: false,\n};\n\nexport default initial;\n","import initial from \"./initial\";\n// reducer to add player to the players list, copying existing state and adding the action\nconst addPlayerReducer = (state, action) => {\n\tif (state.players.length < 10)\n\t\treturn {\n\t\t\t...state,\n\t\t\tplayers: [...state.players, action.payload],\n\t\t};\n\treturn state;\n};\n\nconst showCreate = (state) => {\n\tif (state.players.length === 10)\n\t\treturn {\n\t\t\t...state,\n\t\t\tplayersAdded: true,\n\t\t};\n\n\treturn state;\n};\n\n//https://www.youtube.com/watch?v=myL4xmtAVtw (JavaScript Problem: Shuffling an Array)(All Things JavaScript, LLC)\n//function to shuffle players list\nlet arrayShuffle = (arr) => {\n\tlet newPos, temp;\n\n\tfor (let i = arr.length - 1; i > 0; i--) {\n\t\t//math.floor rounds down random value\n\t\tnewPos = Math.floor(Math.random() * (i + 1));\n\t\ttemp = arr[i];\n\t\tarr[i] = arr[newPos];\n\t\tarr[newPos] = temp;\n\t}\n\treturn arr;\n};\n\n//function to split players list into 2 teams\nconst createTeams = (teams) => {\n\tlet midPoint = Math.floor(teams.length / 2);\n\n\tlet team1 = teams.slice(0, midPoint);\n\n\tlet team2 = teams.slice(midPoint);\n\treturn { team1, team2 };\n};\n\n// reducer to apply functions to create random teams lists from players list\nconst createTeamsReducer = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tteams: createTeams(arrayShuffle([...state.players])),\n\t};\n};\n\n//Main reducer\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"ADD_PLAYER\":\n\t\t\treturn showCreate(addPlayerReducer(state, action));\n\t\tcase \"CREATE_TEAMS\":\n\t\t\treturn createTeamsReducer(state, action);\n\t\tcase \"RESET\":\n\t\t\treturn initial;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport initial from \"./initial\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n\treducer,\n\tinitial,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./data/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}